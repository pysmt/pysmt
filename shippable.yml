language: python

python:
  - 2.7
  - 3.4

# Allow the download of the generated files
archive: true

# before_install:
#  #  set up a virtualenv and activate the python version that you want to use
#    - mkdir -p $HOME/bldve/
#    - if [ "$VIRTUALENV_PYTHON" == "pypy" ]; then virtualenv -p "`which pypy`" $HOME/bldve; else virtualenv -p $SHIPPABLE_PYTHON $HOME/bldve/; fi
#    - source $HOME/bldve/bin/activate

# install:
#   - pip install nose
#   - pip install coverage
#   - pip install six


# Multiple envs will cause multiple build across multiple python versions.
# We test the following:
# 1. PySMT w/o solvers
# 2. PySMT with one solver at the time
#
env:
  matrix:
    - PYSMT_SOLVER="all" COVERAGE="true"
    - PYSMT_SOLVER="None"
    - PYSMT_SOLVER="msat"
    - PYSMT_SOLVER="z3"
    - PYSMT_SOLVER="cvc4"
    - PYSMT_SOLVER="yices"
    - PYSMT_SOLVER="cudd"
    - PYSMT_SOLVER="picosat"
    - PYSMT_SOLVER="msat_wrap"

matrix:
  exclude:
    - python: 3.4
      env: PYSMT_SOLVER="z3"
    - python: 3.4
      env: PYSMT_SOLVER="cvc4"
    - python: 3.4
      env: PYSMT_SOLVER="yices"
    - python: 3.4
      env: PYSMT_SOLVER="cudd"
    - python: 3.4
      env: PYSMT_SOLVER="all" COVERAGE="true"


# Make folders for the reports
before_script:
  - mkdir -p shippable/testresults
  - mkdir -p shippable/codecoverage
  - source shippable.sh $PYSMT_SOLVER $VIRTUALENV_PYTHON

script:
  - env
  - mkdir -p $HOME/bldve/
  - if [ "$VIRTUALENV_PYTHON" == "pypy" ]; then virtualenv -p "`which pypy`" $HOME/bldve; else virtualenv -p $SHIPPABLE_PYTHON $HOME/bldve/; fi
  - source $HOME/bldve/bin/activate
  - pip install nose
  - pip install coverage
  - pip install six
  - ./install.py --check
  - if [ "$PYSMT_SOLVER" == "msat_wrap" ] || [ "$PYSMT_SOLVER" == "all" ]; then cd $TRAVIS_BUILD_DIR/pysmt/test/smtlib/bin; cp /pysmt/.smt_solvers/mathsat-5.3.6-linux-x86_64/bin/mathsat .; mv mathsat.solver.sh.template mathsat.solver.sh; cd $TRAVIS_BUILD_DIR/; fi
  - if [ "$COVERAGE" == "true" ]; then nosetests pysmt -v -A "not slow" --with-xunit --xunit-file=shippable/testresults/nosetests.xml --with-coverage --cover-branches --cover-package=pysmt --cover-xml --cover-xml-file=shippable/codecoverage/coverage.xml; else nosetests pysmt -v --with-xunit --xunit-file=shippable/testresults/nosetests.xml; fi
