name: Test and Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "**" ]

jobs:

  mypy-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install Development Python dependencies
        run: python3 -m pip install -r dev-requirements.txt

      - name: MyPy check
        run: python3 -m mypy pysmt

  run-tests:
    needs: mypy-check

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        pysmt_solver: [ none, msat, z3, yices, cvc5, btor, picosat, bdd, msat_wrap, z3_wrap, optimsat ]

    env:
      PYTHON_VERSION: 3.8
      PYSMT_SOLVER: ${{ matrix.pysmt_solver }}
      AGENT_OS: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1

      - name: Set up Python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 #v4.7.1
        with:
          python-version: 3.8

      - name: Prepare System
        run: |
          bash ci/install.sh

      - name: Run Tests
        run: |
          bash ci/run.sh


  run-tests-master:
    needs: mypy-check
    runs-on: ${{ matrix.os }}
    if: (github.ref == 'refs/heads/master') || (github.event_name == 'pull_request') # We only run these tests on master or in pull-requests
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        pysmt_solver: [ none ]
        pysmt_cython: ["TRUE", "FALSE"]
        pysmt_gmpy: ["TRUE", "FALSE"]
        include:
          - os: ubuntu-latest
            pysmt_solver: all
          - os: macos-latest
            pysmt_solver: none
          - os: macos-13
            pysmt_solver: msat
          - os: macos-13
            pysmt_solver: z3
          - os: macos-13
            pysmt_solver: yices
          - os: windows-latest
            pysmt_solver: none
          - os: windows-latest
            pysmt_solver: msat
          - os: windows-latest
            pysmt_solver: z3

    env:
      PYTHON_VERSION: 3.8
      PYSMT_SOLVER: ${{ matrix.pysmt_solver }}
      AGENT_OS: ${{ matrix.os }}
      PYSMT_CYTHON: ${{ matrix.pysmt_cython }}
      PYSMT_GMPY: ${{ matrix.pysmt_gmpy }}

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1

      - name: Set up Python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 #v4.7.1
        with:
          python-version: 3.8

      - name: Prepare System
        run: |
          bash ci/install.sh

      - name: Run Tests
        run: |
          bash ci/run.sh


  deploy-pypi:
    runs-on: ubuntu-latest
    needs: [run-tests, run-tests-master] # We only deploy if the tests were successful
    if: github.ref == 'refs/heads/master' # We only deploy on master commits

    steps:
    - name: Checkout repo
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1
      with:
        fetch-depth: 0

    - name: Set up Python 3.8
      uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 #v4.7.1
      with:
        python-version: 3.8

    - name: Make distrib
      run: |
        python3 -m pip install wheel
        bash make_distrib.sh

    - name: Upload to PyPI
      uses: pypa/gh-action-pypi-publish@b7f401de30cb6434a1e19f805ff006643653240e
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
