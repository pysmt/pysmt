(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.union (re.* (re.union (re.* (re.+ (re.* (re.* (str.to.re "000"))))) (re.* (re.union (re.* (re.+ (str.to.re "11"))) (re.* (re.union (str.to.re "222") (str.to.re "333"))))))) (re.* (re.* (re.union (re.union (re.union (re.* (str.to.re "444")) (re.* (str.to.re "555"))) (re.union (re.union (str.to.re "6") (str.to.re "777")) (re.union (str.to.re "8") (str.to.re "99")))) (re.union (re.union (re.union (str.to.re "a") (str.to.re "bb")) (re.union (str.to.re "ccc") (str.to.re "dd"))) (re.union (re.+ (str.to.re "ee")) (re.+ (str.to.re "f")))))))) (re.union (re.union (re.union (re.+ (re.* (re.* (re.union (str.to.re "ggg") (str.to.re "hh"))))) (re.+ (re.union (re.+ (re.union (str.to.re "iii") (str.to.re "jj"))) (re.+ (re.+ (str.to.re "kk")))))) (re.union (re.+ (re.union (re.union (re.* (str.to.re "l")) (re.* (str.to.re "mm"))) (re.union (re.* (str.to.re "nnn")) (re.* (str.to.re "o"))))) (re.+ (re.+ (re.union (re.+ (str.to.re "pp")) (re.+ (str.to.re "qqq"))))))) (re.union (re.* (re.* (re.+ (re.* (re.* (str.to.re "rrr")))))) (re.* (re.+ (re.union (re.+ (re.+ (str.to.re "ss"))) (re.+ (re.union (str.to.re "ttt") (str.to.re "u"))))))))) (re.union (re.+ (re.* (re.* (re.* (re.union (re.* (re.+ (str.to.re "vvv"))) (re.* (re.+ (str.to.re "www")))))))) (re.+ (re.union (re.* (re.+ (re.union (re.union (re.union (str.to.re "xxx") (str.to.re "y")) (re.union (str.to.re "zz") (str.to.re "A"))) (re.union (re.* (str.to.re "B")) (re.* (str.to.re "CC")))))) (re.* (re.+ (re.union (re.union (re.union (str.to.re "DD") (str.to.re "E")) (re.union (str.to.re "F") (str.to.re "G"))) (re.union (re.union (str.to.re "HHH") (str.to.re "I")) (re.union (str.to.re "J") (str.to.re "KKK"))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)