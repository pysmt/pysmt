(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.+ (re.* (re.union (re.union (re.union (re.union (re.union (re.+ (re.union (re.union (str.to.re "0") (str.to.re "11")) (re.union (str.to.re "22") (str.to.re "33")))) (re.+ (re.+ (re.union (str.to.re "44") (str.to.re "555"))))) (re.union (re.+ (re.* (re.* (str.to.re "66")))) (re.+ (re.+ (re.* (str.to.re "7")))))) (re.union (re.+ (re.+ (re.* (re.* (str.to.re "88"))))) (re.+ (re.+ (re.union (re.+ (str.to.re "9")) (re.+ (str.to.re "aa"))))))) (re.union (re.+ (re.+ (re.+ (re.* (re.* (str.to.re "bb")))))) (re.+ (re.* (re.* (re.union (re.union (str.to.re "c") (str.to.re "d")) (re.union (str.to.re "ee") (str.to.re "f")))))))) (re.union (re.* (re.union (re.union (re.union (re.+ (re.* (str.to.re "ggg"))) (re.+ (re.union (str.to.re "hhh") (str.to.re "ii")))) (re.union (re.+ (re.union (str.to.re "j") (str.to.re "kkk"))) (re.+ (re.union (str.to.re "l") (str.to.re "m"))))) (re.union (re.union (re.union (re.+ (str.to.re "n")) (re.+ (str.to.re "oo"))) (re.union (re.* (str.to.re "ppp")) (re.* (str.to.re "qqq")))) (re.union (re.+ (re.+ (str.to.re "rr"))) (re.+ (re.* (str.to.re "ss"))))))) (re.* (re.+ (re.+ (re.union (re.+ (re.+ (str.to.re "ttt"))) (re.+ (re.* (str.to.re "uu"))))))))))) (re.* (re.* (re.* (re.+ (re.union (re.union (re.+ (re.+ (re.* (re.* (str.to.re "vvv"))))) (re.+ (re.+ (re.union (re.union (str.to.re "www") (str.to.re "xxx")) (re.union (str.to.re "y") (str.to.re "zz")))))) (re.union (re.+ (re.* (re.* (re.+ (str.to.re "A"))))) (re.+ (re.union (re.+ (re.union (str.to.re "B") (str.to.re "CC"))) (re.+ (re.+ (str.to.re "DDD"))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)