(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.* (re.union (re.+ (re.union (re.union (re.* (re.+ (re.union (re.+ (re.+ (re.+ (str.to.re "000")))) (re.+ (re.* (re.+ (str.to.re "11"))))))) (re.* (re.union (re.* (re.+ (re.* (re.union (str.to.re "22") (str.to.re "3"))))) (re.* (re.* (re.* (re.* (str.to.re "4")))))))) (re.union (re.+ (re.+ (re.union (re.union (re.* (re.+ (str.to.re "5"))) (re.* (re.+ (str.to.re "66")))) (re.union (re.+ (re.* (str.to.re "77"))) (re.+ (re.+ (str.to.re "8"))))))) (re.+ (re.+ (re.union (re.+ (re.+ (re.+ (str.to.re "99")))) (re.+ (re.* (re.union (str.to.re "aaa") (str.to.re "bb")))))))))) (re.+ (re.* (re.* (re.* (re.* (re.union (re.union (re.* (re.* (str.to.re "ccc"))) (re.* (re.+ (str.to.re "dd")))) (re.union (re.union (re.union (str.to.re "ee") (str.to.re "ff")) (re.union (str.to.re "ggg") (str.to.re "h"))) (re.union (re.* (str.to.re "ii")) (re.* (str.to.re "jj")))))))))))) (re.+ (re.union (re.* (re.union (re.union (re.* (re.* (re.+ (re.* (re.union (re.union (str.to.re "kkk") (str.to.re "lll")) (re.union (str.to.re "mm") (str.to.re "nn"))))))) (re.* (re.* (re.union (re.+ (re.* (re.union (str.to.re "ooo") (str.to.re "pp")))) (re.+ (re.* (re.union (str.to.re "qq") (str.to.re "rrr")))))))) (re.union (re.union (re.+ (re.union (re.union (re.* (re.+ (str.to.re "sss"))) (re.* (re.+ (str.to.re "ttt")))) (re.union (re.union (re.union (str.to.re "uuu") (str.to.re "vvv")) (re.union (str.to.re "ww") (str.to.re "xxx"))) (re.union (re.+ (str.to.re "yyy")) (re.+ (str.to.re "z")))))) (re.+ (re.union (re.union (re.* (re.union (str.to.re "AAA") (str.to.re "BBB"))) (re.* (re.union (str.to.re "CC") (str.to.re "D")))) (re.union (re.* (re.* (str.to.re "EE"))) (re.* (re.* (str.to.re "F"))))))) (re.union (re.+ (re.+ (re.union (re.union (re.+ (str.to.re "GGG")) (re.+ (str.to.re "HH"))) (re.union (re.union (str.to.re "III") (str.to.re "JJ")) (re.union (str.to.re "KKK") (str.to.re "LLL")))))) (re.+ (re.union (re.* (re.+ (re.+ (str.to.re "M")))) (re.* (re.union (re.* (str.to.re "NNN")) (re.* (str.to.re "O")))))))))) (re.* (re.* (re.* (re.* (re.union (re.union (re.+ (re.+ (re.+ (str.to.re "PPP")))) (re.+ (re.+ (re.* (str.to.re "QQ"))))) (re.union (re.* (re.* (re.+ (str.to.re "RR")))) (re.* (re.union (re.* (str.to.re "SS")) (re.* (str.to.re "T")))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)